from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData

from utils import chatgpt

menu = InlineKeyboardMarkup(resize_keyboard=True, row_width=1).add(
    InlineKeyboardButton("–°–æ–±—Ä–∞—Ç—å SEO —è–¥—Ä–æ", callback_data="seo_core"),
    InlineKeyboardButton("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="desc_generate"),
    InlineKeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –±—Ä–µ–Ω–¥–∞", callback_data="brand_generate"),
    InlineKeyboardButton("–û–±—É—á–µ–Ω–∏–µ", callback_data="training"),
    InlineKeyboardButton("–¢–∞—Ä–∏—Ñ", callback_data="tariff"),
    InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å SEO –ø–æ–¥ –∫–ª—é—á", callback_data="buy_seo"),
    InlineKeyboardButton("–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="ref_menu"))

back_to_menu = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))

back_to_menu_from_training = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu_from_training"))

back_to_menu_from_pay = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", pay=True),
    InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu_from_pay"))

cancel = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1).add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))

tariff = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("20 —à—Ç.", callback_data="buy_tokens:20:290"),
    InlineKeyboardButton("50 —à—Ç.", callback_data="buy_tokens:50:590"),
    InlineKeyboardButton("100 —à—Ç.", callback_data="buy_tokens:100:990"),
    InlineKeyboardButton("200 —à—Ç.", callback_data="buy_tokens:200:1490")).add(
    InlineKeyboardButton("500 —à—Ç.", callback_data="buy_tokens:500:2990")).add(
    InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))

ref_menu = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("–ó–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å", callback_data="withdraw_ref_balance:balance"),
    InlineKeyboardButton("–í—ã–≤–µ—Å—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É", callback_data="withdraw_ref_balance:card"),
    InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))

seo_complete = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("–°–¥–µ–ª–∞—é —Å–∞–º", callback_data="desc_generate", ),
    InlineKeyboardButton("–û–±—Ä–∞—â—É—Å—å –∫ –≤–∞–º", callback_data="leave_contacts"),
    InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
)

phone = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True).add(KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", request_contact=True),
                                                                   KeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))


def get_brand(user):
    kb = InlineKeyboardMarkup(row_width=2)
    for index, lang in enumerate(chatgpt.brand_lang):
        if index == 0:
            continue
        btn_text = lang["name"]
        if index == user["brand_lang_id"]:
            btn_text = "‚úÖ" + lang["name"]
        kb.insert(InlineKeyboardButton(btn_text, callback_data=f"change_brand:lang:{index}"))

    for index, characters in enumerate(chatgpt.brand_characters):
        if index == 0:
            continue
        btn_text = characters["name"]
        if index == user["brand_characters_id"]:
            btn_text = "‚úÖ" + characters["name"]
        kb.insert(InlineKeyboardButton(btn_text, callback_data=f"change_brand:characters:{index}"))

    for index, words_count in enumerate(chatgpt.brand_words_count):
        if index == 0:
            continue
        btn_text = words_count["name"]
        if index == user["brand_words_count_id"]:
            btn_text = "‚úÖ" + words_count["name"]
        kb.insert(InlineKeyboardButton(btn_text, callback_data=f"change_brand:words_count:{index}"))

    kb.add(InlineKeyboardButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data="start_brand_generate"))
    kb.add(InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))

    return kb


def get_brand_complete():
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üîÑ –ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã", callback_data="start_brand_generate"),
        InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))


def get_desc(user):
    kb = InlineKeyboardMarkup(row_width=2)
    for index, style in enumerate(chatgpt.desc_style):
        if index == 0:
            continue
        btn_text = style["name"]
        if index == user["desc_style_id"]:
            btn_text = "‚úÖ" + style["name"]
        if index == 6:
            kb.add(InlineKeyboardButton(btn_text, callback_data=f"change_desc:{index}"))
        else:
            kb.insert(InlineKeyboardButton(btn_text, callback_data=f"change_desc:{index}"))

    kb.add(InlineKeyboardButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data="start_desc_generate"))
    kb.add(InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))

    return kb


def get_desc_complete():
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üîÑ –ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã", callback_data="start_desc_generate"),
        InlineKeyboardButton("‚è™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))
